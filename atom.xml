<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[王志刚]]></title>
  <subtitle><![CDATA[疑似码农]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-05-05T11:05:33.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[wzg]]></name>
    <email><![CDATA[wdslxk_wzg@163.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[一步步教你在Windows下搭建PHP开发环境(2)php安装]]></title>
    <link href="http://yoursite.com/2015/05/05/step-by-step-create-php-development-environment-3-php/"/>
    <id>http://yoursite.com/2015/05/05/step-by-step-create-php-development-environment-3-php/</id>
    <published>2015-05-05T11:04:56.000Z</published>
    <updated>2015-05-05T11:05:33.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>本教程是<code>一步步教你在Windows下搭建PHP开发环境</code>系列的第3篇，假设你已经完成了前面的部分。<br>该教程所有软件下载地址：<a href="http://pan.baidu.com/s/1o6zHn78" target="_blank" rel="external">百度云</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p>本教程是<code>一步步教你在Windows下搭建PHP开发环境</code>系列的第3篇，假设你已经完成了前面的部分。<br>该教程所有软件下载地址：<a href="http://pan.baidu.com/s/1o6zHn78"]]>
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一步步教你在Windows下搭建PHP开发环境(2)mysql安装]]></title>
    <link href="http://yoursite.com/2015/05/05/step-by-step-create-php-development-environment-2-mysql/"/>
    <id>http://yoursite.com/2015/05/05/step-by-step-create-php-development-environment-2-mysql/</id>
    <published>2015-05-05T10:56:52.000Z</published>
    <updated>2015-05-05T11:03:57.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>本教程是<code>一步步教你在Windows下搭建PHP开发环境</code>系列的第2篇，假设你已经完成了前面的部分。<br>该教程所有软件下载地址：<a href="http://pan.baidu.com/s/1o6zHn78" target="_blank" rel="external">百度云</a></p>
<h2 id="安装mysql数据库">安装mysql数据库</h2><p>mysql是c/s结构的软件。当前是为web服务器增加可以访问数据库的能力，增加mysql服务器。</p>
<h3 id="下载mysql服务端软件">下载mysql服务端软件</h3><p><img src="/image/php_environment/mysql1.jpg" alt=""><br>注意：以上安装软件，不仅包含了服务端，还包含了客户端</p>
<h3 id="双击安装文件，进入安装界面，点击next">双击安装文件，进入安装界面，点击next</h3><p><img src="/image/php_environment/mysql2.jpg" alt=""> </p>
<h3 id="在协议界面，选择同意协议，点击next">在协议界面，选择同意协议，点击next</h3><p><img src="/image/php_environment/mysql3.jpg" alt=""> </p>
<h3 id="在模式配置界面，点击自定义安装">在模式配置界面，点击自定义安装</h3><p><img src="/image/php_environment/mysql4.jpg" alt=""> </p>
<h3 id="在路径配置界面">在路径配置界面</h3><p>a)在server目录下（跟apache同一路径下）创建mysql目录<br><img src="/image/php_environment/mysql5.jpg" alt=""><br>b)修改mysql的安装目录<br>i 安装文件所在路径<br><img src="/image/php_environment/mysql6.jpg" alt=""><br>ii 数据路径<br><img src="/image/php_environment/mysql7.jpg" alt=""> </p>
<h3 id="点击next，进入准备安装界面，点击install进行安装，进入安装完成界面">点击next，进入准备安装界面，点击install进行安装，进入安装完成界面</h3><p><img src="/image/php_environment/mysql8.jpg" alt=""></p>
<h3 id="点击next，点击finish，进入配置界面">点击next，点击finish，进入配置界面</h3><p><img src="/image/php_environment/mysql9.jpg" alt=""></p>
<h3 id="点击next，选择详细配置，点击next">点击next，选择详细配置，点击next</h3><p><img src="/image/php_environment/mysql10.jpg" alt=""></p>
<h3 id="在服务器类型界面，选择Develop_Machine，点击next">在服务器类型界面，选择Develop Machine，点击next</h3><p><img src="/image/php_environment/mysql11.jpg" alt=""></p>
<h3 id="在数据库用途配置界面，选择多功能数据库，点击next">在数据库用途配置界面，选择多功能数据库，点击next</h3><p><img src="/image/php_environment/mysql12.jpg" alt=""></p>
<h3 id="InnoDB驱动选择界面，直接点击next">InnoDB驱动选择界面，直接点击next</h3><p><img src="/image/php_environment/mysql13.jpg" alt=""></p>
<h3 id="在并发选择界面，选择手动选择模式，使用默认15，点击next">在并发选择界面，选择手动选择模式，使用默认15，点击next</h3><p><img src="/image/php_environment/mysql14.jpg" alt=""></p>
<h3 id="在网络配置界面，勾选防火墙放行选项，点击next">在网络配置界面，勾选防火墙放行选项，点击next</h3><p><img src="/image/php_environment/mysql15.jpg" alt=""></p>
<h3 id="进入字符集配置界面，选择手动设置字符集，设置为utf8，点击next">进入字符集配置界面，选择手动设置字符集，设置为utf8，点击next</h3><p><img src="/image/php_environment/mysql16.jpg" alt=""></p>
<h3 id="勾选环境变量选项，点击next">勾选环境变量选项，点击next</h3><p><img src="/image/php_environment/mysql17.jpg" alt=""></p>
<h3 id="在安全配置界面，设置root密码">在安全配置界面，设置root密码</h3><p><img src="/image/php_environment/mysql18.jpg" alt=""></p>
<h3 id="点击execute执行配置项，点击finish完成安装">点击execute执行配置项，点击finish完成安装</h3><p><img src="/image/php_environment/mysql19.jpg" alt=""></p>
<h3 id="验证mysql是否安装成功，cmd控制台输入_mysql_-uroot_-proot">验证mysql是否安装成功，cmd控制台输入 mysql -uroot -proot</h3><p><img src="/image/php_environment/mysql20.jpg" alt=""></p>
<h2 id="mysql目录分析">mysql目录分析</h2><p><img src="/image/php_environment/mysql_dirInfo.jpg" alt=""></p>
<h2 id="mysql_bin目录">mysql bin目录</h2><p>mysql.exe: mysql的客户端软件<br>mysqld.exe: mysql的服务端软件</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p>本教程是<code>一步步教你在Windows下搭建PHP开发环境</code>系列的第2篇，假设你已经完成了前面的部分。<br>该教程所有软件下载地址：<a href="http://pan.baidu.com/s/1o6zHn78"]]>
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一步步教你在Windows下搭建PHP开发环境(1)Apache安装]]></title>
    <link href="http://yoursite.com/2015/05/04/step-by-step-create-php-development-environment-1-apache/"/>
    <id>http://yoursite.com/2015/05/04/step-by-step-create-php-development-environment-1-apache/</id>
    <published>2015-05-04T08:45:10.000Z</published>
    <updated>2015-05-05T11:01:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>用一些集成的开发环境，如 PHPstudy，appserve，wamp，xamp等，不需要单独安装和配置软件，即可当做一个动态web服务器使用。<br>但是集成开发环境是第三方提供，存在安全隐患。所以，在真实项目开发中，服务器端的部署都是使用单独安装后配置的。<br>该教程所有软件下载地址：<a href="http://pan.baidu.com/s/1o6zHn78" target="_blank" rel="external">百度云</a></p>
<h2 id="安装Apache">安装Apache</h2><h3 id="下载Apache软件">下载Apache软件</h3><p><img src="/image/php_environment/download_apache.png" alt=""></p>
<h3 id="双击安装文件，选择next">双击安装文件，选择next</h3><p><img src="/image/php_environment/apache1.jpg" alt="">  </p>
<h3 id="选择_I_accept_the_items_in_the_licence_agreement,然后点击next">选择 I accept the items in the licence agreement,然后点击next</h3><p><img src="/image/php_environment/apache2.jpg" alt=""> </p>
<h3 id="点击next，进入到服务器信息配置界面">点击next，进入到服务器信息配置界面</h3><p><img src="/image/php_environment/apache3.jpg" alt=""> </p>
<h3 id="填写服务器配置信息，点击next">填写服务器配置信息，点击next</h3><p><img src="/image/php_environment/apache4.jpg" alt=""> </p>
<h3 id="在配置模式选择_自定义_模式，点击next">在配置模式选择 自定义 模式，点击next</h3><p><img src="/image/php_environment/apache5.jpg" alt=""> </p>
<h3 id="进入路径配置界面">进入路径配置界面</h3><p>a) 创建一个server目录（不能中文目录，名字自己定）<br><img src="/image/php_environment/apache5_1.jpg" alt=""><br>b) 在server下创建apache目录，将安装目录选择到apache目录下<br><img src="/image/php_environment/apache5_2.jpg" alt=""> </p>
<h3 id="点击next，进入准备安装界面，点击Install。">点击next，进入准备安装界面，点击Install。</h3><p><img src="/image/php_environment/apache8.jpg" alt=""> </p>
<h3 id="点击finish完成">点击finish完成</h3><p><img src="/image/php_environment/apache9.jpg" alt=""> </p>
<h3 id="验证apache是否安装成功，在浏览器输入localhost,出现It_work即安装成功">验证apache是否安装成功，在浏览器输入localhost,出现It work即安装成功</h3><p><img src="/image/php_environment/apache10.jpg" alt=""> </p>
<h2 id="Apache目录分析">Apache目录分析</h2><p><img src="/image/php_environment/apache_dirInfo.jpg" alt=""> </p>
<h2 id="Apache的bin目录">Apache的bin目录</h2><p>httpd.exe:Apache的服务端，处理各种请求的软件</p>
<p>几个简单的httpd命令：<br>-M : Apache可以加载的模块（功能）<br>-l : 已经加载的模块<br>-t : 验证配置文件的语法错误</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p>用一些集成的开发环境，如 PHPstudy，appserve，wamp，xamp等，不需要单独安装和配置软件，即可当做一个动态web服务器使用。<br>但是集成开发环境是第三方提供，存在安全隐患。所以，在真实项目开发中，服务器端的部署都]]>
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[编译和解释的区别是什么？]]></title>
    <link href="http://yoursite.com/2015/05/04/what-is-complied-language-and-interpreted-language/"/>
    <id>http://yoursite.com/2015/05/04/what-is-complied-language-and-interpreted-language/</id>
    <published>2015-05-04T06:55:40.000Z</published>
    <updated>2015-05-04T07:29:56.000Z</updated>
    <content type="html"><![CDATA[<h2 id="该篇文章转载出处">该篇文章转载出处</h2><p>在程序员面试的过程中，会出现面试官问及低级语言与高级语言，编译与解释，脚本语言与<br>编译型语言的区别。<br>从网上找到一篇资料讲的还算详细，先转载过来：<a href="http://www.cnblogs.com/bluestorm/archive/2012/12/09/2810167.html" target="_blank" rel="external">Bluestorm’s Space</a><br>后面，我会进行综合整理。    </p>
<h2 id="编译和解释的区别是什么？">编译和解释的区别是什么？</h2><p>编译器是把源程序的每一条语句都编译成机器语言,并保存成二进制文件,这样运行时计算机可以直接以机器语言来运行此程序,速度很快;    </p>
<p>而解释器则是只在执行程序时,才一条一条的解释成机器语言给计算机来执行,所以运行速度是不如编译后的程序运行的快的.     </p>
<p>这是因为计算机不能直接认识并执行我们写的语句,它只能认识机器语言(是二进制的形式)   </p>
<h3 id="低级语言与高级语言">低级语言与高级语言</h3><p>最初的计算机程序都是用0和1的序列表示的，程序员直接使用的是机器指令，无需翻译，从纸带打孔输入即可执行得到结果。后来为了方便记忆，就将用0、1序列表示的机器指令都用符号助记，这些与机器指令一一对应的助记符就成了汇编指令，从而诞生了汇编语言。无论是机器指令还是汇编指令都是面向机器的，统称为低级语言。因为是针对特定机器的机器指令的助记符，所以汇编语言是无法独立于机器(特定的CPU体系结构)的。但汇编语言也是要经过翻译成机器指令才能执行的，所以也有将运行在一种机器上的汇编语言翻译成运行在另一种机器上的机器指令的方法，那就是交叉汇编技术。   </p>
<p>高级语言是从人类的逻辑思维角度出发的计算机语言，抽象程度大大提高，需要经过编译成特定机器上的目标代码才能执行，一条高级语言的语句往往需要若干条机器指令来完成。高级语言独立于机器的特性是靠编译器为不同机器生成不同的目标代码(或机器指令)来实现的。那具体的说，要将高级语言编译到什么程度呢，这又跟编译的技术有关了，既可以编译成直接可执行的目标代码，也可以编译成一种中间表示，然后拿到不同的机器和系统上去执行，这种情况通常又需要支撑环境，比如解释器或虚拟机的支持，Java程序编译成bytecode，再由不同平台上的虚拟机执行就是很好的例子。所以，说高级语言不依赖于机器，是指在不同的机器或平台上高级语言的程序本身不变，而通过编译器编译得到的目标代码去适应不同的机器。从这个意义上来说，通过交叉汇编，一些汇编程序也可以获得不同机器之间的可移植性，但这种途径获得的移植性远远不如高级语言来的方便和实用性大。   </p>
<h3 id="编译与解释">编译与解释</h3><p>编译是将源程序翻译成可执行的目标代码，翻译与执行是分开的；而解释是对源程序的翻译与执行一次性完成，不生成可存储的目标代码。这只是表象，二者背后的最大区别是：对解释执行而言，程序运行时的控制权在解释器而不在用户程序；对编译执行而言，运行时的控制权在用户程序。</p>
<p>解释具有良好的动态特性和可移植性，比如在解释执行时可以动态改变变量的类型、对程序进行修改以及在程序中插入良好的调试诊断信息等，而将解释器移植到不同的系统上，则程序不用改动就可以在移植了解释器的系统上运行。同时解释器也有很大的缺点，比如执行效率低，占用空间大，因为不仅要给用户程序分配空间，解释器本身也占用了宝贵的系统资源。</p>
<p>编译器是把源程序的每一条语句都编译成机器语言,并保存成二进制文件,这样运行时计算机可以直接以机器语言来运行此程序,速度很快;<br>而解释器则是只在执行程序时,才一条一条的解释成机器语言给计算机来执行,所以运行速度是不如编译后的程序运行的快的.</p>
<p>1、编辑：用编辑软件（EDIT.EXE或记事本）形成源程序（.ASM）,如：LX.ASM;<br>2、汇编：用汇编程序（MASM.EXE）对源程序进行汇编，形成目标文件（.OBJ），格式如下：MASM LX.ASM;<br>3、连接：用连接程序（LINK.EXE）对目标程序进行连接，形成可执行文件（.EXE），格式如下：LINK LX.OBJ;<br>4、执行：如果结果在屏幕在显示，则直接执行可执行文件。<br>5、调试：用调试程序（DEBUG.EXE）对可执行文件进行调试，格式如下：DEBUG LX.EXE</p>
<ol>
<li><p>在具体计算机上实现一种语言，首先要确定的是表示该语言语义解释的虚拟计算机，一个关键的问题是程序执行时的基本表示是实际计算机上的机器语言还是虚拟机的机器语言。这个问题决定了语言的实现。根据这个问题的回答，可以将程序设计语言划分为两大类：编译型语言和解释型语言。</p>
</li>
<li><p>由编译型语言编写的源程序需要经过编译、汇编和链接才能输出目标代码，然后机器执行目标代码，得出运行结果，目标代码由机器指令组成，一般不能独立运行，因为源程序中可能使用了某些汇编程序不能解释引用的库函数，而库函数代码又不在源程序中，此时还需要链接程序完成外部引用和目标模块调用的链接任务，最后输出可执行代码。C、C++、Fortran、Pascal、Ada都是编译实现的。</p>
</li>
<li><p>解释型语言的实现中，翻译器并不产生目标机器代码，而是产生易于执行的中间代码，这种中间代码与机器代码是不同的，中间代码的解释是由软件支持的，不能直接使用硬件，软件解释器通常会导致执行效率较低。用解释型语言编写的程序是由另一个可以理解中间代码的解释程序执行的。与编译程序不同的是，解释程序的任务是逐一将源程序的语句解释成可执行的机器指令，不需要将源程序翻译成目标代码后再执行。对于解释型Basic语言，需要一个专门的解释器解释执行 Basic程序，每条语言只有在执行才被翻译。这种解释型语言每执行一次就翻译一次，因而效率低下。</p>
</li>
<li><p>Java很特殊，Java程序也需要编译，但是没有直接编译称为机器语言，而是编译称为字节码，然后在Java虚拟机上用解释方式执行字节码。Python 的也采用了类似Java的编译模式，先将Python程序编译成Python字节码，然后由一个专门的Python字节码解释器负责解释执行字节码。</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="该篇文章转载出处">该篇文章转载出处</h2><p>在程序员面试的过程中，会出现面试官问及低级语言与高级语言，编译与解释，脚本语言与<br>编译型语言的区别。<br>从网上找到一篇资料讲的还算详细，先转载过来：<a href="http://www.cnblogs]]>
    </summary>
    
      <category term="编译型语言" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91%E5%9E%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="解释型语言" scheme="http://yoursite.com/tags/%E8%A7%A3%E9%87%8A%E5%9E%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="计算机科学" scheme="http://yoursite.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[这个博客是如何构建的]]></title>
    <link href="http://yoursite.com/2015/05/04/how-this-blog-build/"/>
    <id>http://yoursite.com/2015/05/04/how-this-blog-build/</id>
    <published>2015-05-03T16:09:47.000Z</published>
    <updated>2015-05-03T16:54:15.000Z</updated>
    <content type="html"><![CDATA[<h2 id="关于个人博客">关于个人博客</h2><p>如果能够坚持写博客，并且坚持写不记流水账的博客，对于个人的裨益显而易见。<br>之前用 github pages + jekyll 的方式去构建了一个博客，文章坚持写了一阵子，最终没坚持下来，<br>很是懊恼。<br>今天，发现了一种新的方式 github pages + hexo，于是就把原来的博客整个都删掉了，用新的方案<br>折腾一遍，一切重新开始。主题用的是Jacman。<br>希望这次能够将写博客的习惯坚持下来。   </p>
<h2 id="参考资料">参考资料</h2><p>通过以下两篇博客内容，完全能够自己动手构建一个博客。<br>先看cnfeet，几乎是一步步手把手教学了。<br>再看WuChong，详细讲解了一些有用的属性功能。<br>cnfeat：<a href="http://cnfeat.com/2014/05/10/2014-05-11-how-to-build-a-blog/#参考资料：" target="_blank" rel="external">http://cnfeat.com/2014/05/10/2014-05-11-how-to-build-a-blog/#参考资料：</a><br>WuChong：<a href="http://wuchong.me/jacman/2014/11/20/how-to-use-jacman/#" target="_blank" rel="external">http://wuchong.me/jacman/2014/11/20/how-to-use-jacman/#</a>   </p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="关于个人博客">关于个人博客</h2><p>如果能够坚持写博客，并且坚持写不记流水账的博客，对于个人的裨益显而易见。<br>之前用 github pages + jekyll 的方式去构建了一个博客，文章坚持写了一阵子，最终没坚持下来，<br>很是懊恼。<br>今]]>
    </summary>
    
      <category term="github pages" scheme="http://yoursite.com/tags/github-pages/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="个人博客" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="个人博客" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>